# Grafana values with custom configuration
grafana:
  # Admin user configuration
  adminUser: admin
  adminPassword: ""
  adminPasswordSecret:
    name: grafana
    key: admin-password
  # Security context - best practice
  securityContext:
    runAsNonRoot: true
    runAsUser: 472
    runAsGroup: 472
    fsGroup: 472

  # Persistence configuration
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: ""
    accessModes:
      - ReadWriteOnce

  # Service configuration
  service:
    type: ClusterIP
    port: 3001  # External port - must match what we're connecting to
    targetPort: 3000  # Internal container port
    annotations: {}

  # Grafana configuration
  grafana.ini:
    server:
      http_port: 3000
      root_url: "%(protocol)s://%(domain)s:3001/"
    database:
      type: sqlite3
      path: /var/lib/grafana/grafana.db
    security:
      allow_embedding: false
      cookie_secure: false
      cookie_samesite: Lax
      disable_initial_admin_creation: true
      disable_brute_force_login_protection: true  # Disable login attempt lockout
    users:
      allow_sign_up: false
      allow_org_create: false
      auto_assign_org_role: Viewer
    auth:
      disable_login_form: false
      disable_signout_menu: false
      anonymous_enabled: false
    auth.anonymous:
      enabled: false
    log:
      mode: console
      level: info

  # Health check probes - use endpoints that don't require auth
  livenessProbe:
    httpGet:
      path: /api/health
      port: 3000
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 3
    timeoutSeconds: 10

  readinessProbe:
    httpGet:
      path: /api/health  # Use /api/health instead of /api/ready
      port: 3000
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    timeoutSeconds: 5

  # Data sources configuration - use template for service discovery
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: VictoriaMetrics
        type: prometheus
        url: http://{{ .Release.Name }}-victoria-metrics-single-server:8428
        access: proxy
        isDefault: true
        editable: false
        jsonData:
          timeInterval: 15s
          queryTimeout: 60s
          httpMethod: POST

  # No Prometheus Operator resources needed - using Victoria Metrics directly

  # Sidecar configuration for dashboard discovery
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      searchNamespace: monitoring
      folder: /var/lib/grafana/dashboards/default
      defaultFolderName: "General"
      skipInvalidDashboards: false
      healthCheck:
        enabled: true
        timeout: 30s
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi

  # Dashboard configuration
  dashboards:
    default:
      # Victoria Metrics dashboard
      victoria-metrics:
        gnetId: 14178
        revision: 1
        datasource: VictoriaMetrics
      # Node Exporter dashboard
      node-exporter:
        gnetId: 1860
        revision: 28
        datasource: VictoriaMetrics
      # Kubernetes Cluster dashboard
      kubernetes-cluster:
        gnetId: 315
        revision: 3
        datasource: VictoriaMetrics


  # Resource limits - optimized
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi
 # Init container resources - required for namespace quota
  downloadDashboards:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi

# Init chown data container resources
  initChownData:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi