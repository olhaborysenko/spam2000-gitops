# Grafana values with custom configuration
grafana:
  # Use environment variable for admin password (more secure)
  adminPassword: ${GRAFANA_ADMIN_PASSWORD:-admin}
  
  persistence:
    enabled: true
    size: 10Gi
  
  # Grafana service configuration - use 3001 for both external and internal
  service:
    type: ClusterIP
    port: 3001
    targetPort: 3001
  
  # Grafana server configuration - listen on port 3001 internally
  grafana.ini:
    server:
      http_port: 3001
    database:
      type: sqlite3
      path: /var/lib/grafana/grafana.db
  
  # Health check probes - use port 3001
  livenessProbe:
    httpGet:
      path: /api/health
      port: 3001
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /api/health
      port: 3001
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
  
  # Data sources configuration
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: VictoriaMetrics
        type: prometheus
        url: http://victoria-metrics-victoria-metrics-single-server:8428
        access: proxy
        isDefault: true
        editable: true
        jsonData:
          timeInterval: 15s
          queryTimeout: 60s
  
  # Dashboard providers
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/default
  
  # Dashboards
  dashboards:
    default:
      node-exporter:
        gnetId: 1860
        revision: 22
        datasource: VictoriaMetrics
      kubernetes-cluster:
        gnetId: 7249
        revision: 1
        datasource: VictoriaMetrics
      victoria-metrics:
        gnetId: 11174
        revision: 1
        datasource: VictoriaMetrics
      spam2000-app:
        gnetId: 315
        revision: 1
        datasource: VictoriaMetrics
        title: "Spam2000 Application Metrics"
        uid: spam2000-app
        panels:
          - title: "Spam2000 Request Rate"
            type: graph
            targets:
              - expr: 'rate(spam2000_requests_total[5m])'
                legendFormat: "Requests/sec"
          - title: "Spam2000 Response Time"
            type: graph
            targets:
              - expr: 'histogram_quantile(0.95, rate(spam2000_request_duration_seconds_bucket[5m]))'
                legendFormat: "95th percentile"
          - title: "Spam2000 Error Rate"
            type: graph
            targets:
              - expr: 'rate(spam2000_errors_total[5m])'
                legendFormat: "Errors/sec"
  
  ingress:
    enabled: false
  
  # Resource limits and requests to satisfy namespace quota
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 512Mi
  
  # Init container resources
  initChownData:
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  
  # Download dashboards resources - this is the container causing the quota issue
  downloadDashboards:
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  
  # Sidecar resources for any additional containers
  sidecar:
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  

  

